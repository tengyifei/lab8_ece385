module font_rom_32_bit ( input [10:0]	addr,
						output [23:0]	data
					 );

	parameter ADDR_WIDTH = 11;
   parameter DATA_WIDTH =  24;
	logic [ADDR_WIDTH-1:0] addr_reg;
				
	// ROM definition				
	parameter [0:2**ADDR_WIDTH-1][DATA_WIDTH-1:0] ROM = {
      //x00 start of the first character sprite
		//each 16 bit represents a row
		24'hffffff,
		24'hfefdfe,
		24'h958991,
		24'hb2a8aa,
		24'hf3f1f1,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x01
		24'hffffff,
		24'hfbfbfb,
		24'h7a6d74,
		24'h64555e,
		24'h9e6f1d,
		24'hb19d84,
		24'hebe3e3,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x02
		24'hffffff,
		24'hffffff,
		24'he2dfe1,
		24'h62535a,
		24'h8f6823,
		24'hbba330,
		24'h89744e,
		24'hd6bfbd,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x03
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hb2abae,
		24'h71423a,
		24'h755026,
		24'h978d47,
		24'h9c6c51,
		24'hfefbfb,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x04
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hf4f3f4,
		24'h5d372d,
		24'haf6012,
		24'h774f34,
		24'h6f4e32,
		24'hf7eeec,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x05
		24'hffffff,
		24'hffffff,
		24'hfdfdfc,
		24'hf8f7f8,
		24'h362934,
		24'h6a3a15,
		24'hba7850,
		24'hded0ca,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x06
		24'hffffff,
		24'hfdfcfa,
		24'hc07c38,
		24'hb68b5e,
		24'h6f462f,
		24'h462a40,
		24'hb69f90,
		24'hfaf7f3,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x07
		24'hffffff,
		24'hffffff,
		24'h9a8579,
		24'h331d1c,
		24'h954e10,
		24'h924c37,
		24'he3dad7,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x08
		24'hffffff,
		24'hb0a4a5,
		24'h3c2124,
		24'h2e1618,
		24'h46241f,
		24'h6e3f3f,
		24'hc1b4a2,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x09
		24'hecd5c3,
		24'hc15709,
		24'h9d7016,
		24'h6d592a,
		24'h49343a,
		24'h4a283e,
		24'h8f776f,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x0a
		24'hf7efe9,
		24'hc56c36,
		24'hd47e02,
		24'hd09a08,
		24'hb9b33f,
		24'h653c28,
		24'h6e504a,
		24'hfaf9f9,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x0b
		24'hffffff,
		24'hf8f6f6,
		24'hcfa48f,
		24'ha25813,
		24'h94501a,
		24'h4b2b31,
		24'h684c52,
		24'hfcfcfc,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x0c
		24'hffffff,
		24'hffffff,
		24'hf8f7f8,
		24'h4c3037,
		24'h4f3335,
		24'h46272d,
		24'h8a767b,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x0d
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'h796568,
		24'h756355,
		24'h88644a,
		24'h9c8a62,
		24'hf2f4ee,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x0e
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'ha7999c,
		24'h814d40,
		24'h6f5354,
		24'hc2b7a5,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x0f
		24'hffffff,
		24'hffffff,
		24'hddd6d7,
		24'h95533d,
		24'h7c5148,
		24'ha7979a,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x10
		24'hffffff,
		24'hd8d3d5,
		24'h925143,
		24'h8b5140,
		24'h8c685b,
		24'hebe9e3,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x11
		24'hf4f4f4,
		24'h70555d,
		24'h824742,
		24'h986554,
		24'h8c7e73,
		24'hfaf9f9,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x12
		24'hffffff,
		24'hc8b5b9,
		24'h7a3b42,
		24'h7e514a,
		24'h9e8672,
		24'hd9d4d0,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x13
		24'hffffff,
		24'hffffff,
		24'hb19097,
		24'h924d4b,
		24'h9f7e6c,
		24'hcec6bf,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x14
		24'hffffff,
		24'hffffff,
		24'h8a7c85,
		24'h804444,
		24'h915e58,
		24'hae9e93,
		24'hf4f3f3,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x15
		24'hffffff,
		24'hf7f6f7,
		24'h74646c,
		24'h733f47,
		24'h7a4c49,
		24'h9f806d,
		24'hbfb4ab,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x16
		24'hffffff,
		24'hffffff,
		24'hfcfcfc,
		24'hded8d9,
		24'hc8a7a8,
		24'ha68684,
		24'ha88d8a,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		//x17
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,
		24'hffffff,


		 // end of the first sprite character
		 
		 
		 
        };

	assign data = ROM[addr];

endmodule  